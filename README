create machine image:
	1. create vm with config:
		name: pyramid-vm-original
		region/zone: aus-southest1/aus-southeast1-b OR aus-southest2/aus-southeast2-a
		machine type: e2-highmem-8
		boot disk size: 1.5TB for big zones, 1.2TB for small zones, 800GB for tiny zones
		firewall: allow http/https traffic
	2. gcloud set up
		gcloud init
			[2] log in with new acc
			[45] project: eq-c2rw-research
			[38] zone: australia-southeast1-b OR [59] zone: australia-southeast2-a
		gcloud auth application-default login
	3. install dependencies
		upload setup.sh
		chmod +x setup.sh
		./setup.sh
	4. create a machine image using the vm with config:
		name: pyramid-template-<size>
		location: regional/aus-southeast1
	5. once machine image created:
		delete vm 'pyramid-vm-original'

use machine image to create vms
	5. upload files to google cloud bucket:
		upload startup.sh to google cloud bucket at https://storage.cloud.google.com/geoserver-web-xml/startup.sh
		upload web.xml (altered to enable CORS, more details at https://docs.geoserver.org/latest/en/user/production/container.html#enable-cors) to google cloud bucket at https://storage.cloud.google.com/geoserver-web-xml/web.xml
	5. to generate deploy script:
		create instance from machine image 'pyramid-template-<size>'
		region: aus-southeaset1/zone:aus-southeast1-b
		advanced options/management/metadata/add item:
			key 1: startup-script-url
			value 1: https://storage.cloud.google.com/geoserver-web-xml/startup.sh
			key 2: startup-script-run
			value 2: true
		get equivalent code and paste it in deploy.sh (in the for loop and make the vm name iterable)
	5. open cloud shell:
		upload deploy.sh
		upload zone
		chmod +x deploy.sh
		nohup ./deploy.sh > output.txt 2>&1 &

once pyramids are generated:
	6. publish to geoeserver
		navigate to http://<vm external ip>:80/geoserver (username: admin / password: geoserver)
		create workspace tasmania and set url to http://<vm external ip>/geoserver/tasmania and set it as default workspace
		create a image pyramid store and specify path to file:data/<vm name>
		publish layer
		change declared SRS to EPSG:4326
		change SRS handling to Reproject to Declared
		deselect Use JAI ImageRead (deferred loading)
	7. update the cesium file to reflect the changes (ip and zones)

extra notes:
	8. for zones that finish processing first, stop them first until all zones are finished
	9. once all zones are finished, start all stopped vm and run:
		sudo docker ps -a | awk 'NR>1 {print $1}' | xargs sudo docker start